@import '../common/variables';

@import '../mixins/mixins';


// headings
@mixin headingBase {
  margin: 0.125em 0;

  font-family: $ffHeading;
  font-weight: $fwExtraBold;
  line-height: 1.25;
  overflow-wrap: break-word;
  text-align: left;

  @media #{$mqTablet} {
    margin: 0.5em 0;
  }
}

@mixin heading1 {
  @include headingBase();
  letter-spacing: -1px;
  font-size: 40px;
}

@mixin heading2 {
  @include headingBase();
  font-size: 30px;
}

@mixin heading3 {
  @include headingBase();
  font-size: 20px;
}

@mixin heading4 {
  @include headingBase();
}

@mixin heading5 {
  @include headingBase();
}

@mixin heading6 {
  @include headingBase();
}

@mixin subheading {
  font-family: $ffSerif;
  line-height: 1.125;
  margin: 2px 0 16px 0;

  @media #{$mqDesktop} {
    margin: 2px 0 24px 0;
  }
}


// text blocks
@mixin paragraph {
  margin-top: 0;
  margin-bottom: 16px;

  font-family: $ffSansSerif;
  font-size: $mainFontSize;
  font-weight: $fwRegular;
  hyphens: none;
  letter-spacing: .05pt;
  line-height: 1.5;
  text-align: left;
  word-break: unset;
}

@mixin list {
  @include paragraph();
}

@mixin unorderedListItem {
  $leftMargin: 24px;

  position: relative;
  left: $leftMargin;
  list-style: none;
  margin-bottom: 0.5em;
  width: calc(100% - #{$leftMargin});

  font-size: $mainFontSize;
  hyphens: none;
  line-height: 1.5;
  text-align: left;
  word-break: unset;

  &:last-of-type {
    margin-bottom: 0;
  }

  &::before {
    position: absolute;
    content: "\2014";
    left: -#{$leftMargin};
  }
}

@mixin unsetListItem() {
  left: unset;
  width: unset;
  margin: unset;

  &::before {
    position: unset;
    content: '';
    left: unset;
  }
}

@mixin blockquote {
  @include paragraph();

  background-color: $nearWhite;
  border-left: 2px solid $mediumBlue;
  margin-bottom: 32px;
  margin-top: 32px;
  padding: 20px 32px;

  color: $darkerGrey;
  font-family: $ffSerif;
  font-size: 0.975em;
  hyphens: none;
  line-height: 1.25;

  @media #{$mqDesktop} {
    margin-top: 48px;
    margin-bottom: 48px;
  }

  ol, ul, li, a,
  p, b, strong, i, em,
  cite {
    font-family: inherit;
    font-size: inherit;
    hyphens: inherit;
  }
}


// interactive elements
@mixin button {
  // should be applicable to both <button> and <a>
  // and provide the exact same visual behaviour

  display: inline-block;

  -webkit-border-radius: 0;
  background-color: transparent;
  border: 0;
  box-shadow: none;
  cursor: pointer;
  padding: 0;
  width: min-content;

  font-family: $ffSansSerif;
  font-weight: $fwBold;
  text-align: center;
  text-decoration: none;

  &:hover,
  &:active {
    text-decoration: none;
  }

  &:focus-visible {
    @include focusIndicator();
  }

  &:disabled,
  &[disabled] {
    cursor: not-allowed;
  }
}

@mixin primaryButton {
  @include button();

  background-color: $darkerBlue;
  border: 2px solid transparent;
  padding: 12px 16px;

  color: $nearWhite;
  font-family: $ffSansSerif;
  font-size: $mainFontSize;
  line-height: 1;

  &:hover,
  &:active {
    background-color: $nearWhite;
    border: 2px solid $blue;
    color: $darkerBlue;
  }
}

@mixin anchor {
  @include paragraph();
  @include underlined();
  cursor: pointer;

  &:hover,
  &:active {
    text-decoration: none;
  }

  &:focus-visible {
    @include focusIndicator();
  }
}

@mixin anchorWithArrow {
  @include anchor();

  font-family: $ffSerif;
  font-size: $fsMedium;
  color: $darkerBlue;

  &::after {
    position: absolute;
    margin-left: 8px;

    content: " ➚";
    color: $darkerBlue;
    text-decoration: none;
  }

  &:hover,
  &:active {
    color: $blue;

    &::after {
      color: $blue;
    }
  }
}

@mixin select {
  @include paragraph();

  -moz-appearance: none;
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  appearance: none;

  background-color: $nearWhite;
  background-image:
    linear-gradient(45deg, transparent 50%, $darkerGrey 50%),
    linear-gradient(135deg, $darkerGrey 50%, transparent 50%),
    linear-gradient(to right, $darkGrey, $darkGrey);
  background-position:
    calc(100% - 19px) calc(1em + 2px),
    calc(100% - 14px) calc(1em + 2px),
    calc(100% - 2.5em) 0.5em;
  background-size:
    5px 5px,
    5px 5px,
    1px 1.5em;
  background-repeat: no-repeat;

  border: 1px solid $nearBlack;
  padding: 8px 48px 8px 16px;

  font-family: $ffSansSerif;
  font-size: $fsMedium;
  color: $darkerGrey;

  &:focus-visible {
    @include focusIndicator();
  }

  // hide the default arrow in ie10 and ie11
  &::-ms-expand {
    display: none;
  }

  // fix for firefox removes dotted outline on selection option
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 $black;
  }
}


// forms
@mixin fieldset {
  font-family: $ffSansSerif;
  font-weight: $fwRegular;
}

@mixin fieldsetLegend {
  font-size: 0;
  height: 0;
  visibility: hidden;
  width: 0;
}

@mixin textInput {
  -webkit-appearance: none;
  -webkit-border-radius: 0;

  background-color: white;
  border-radius: 0;
  border: 1pt solid $middleGrey;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.25);
  padding-left: 4px;
  padding-right: 4px;

  color: $black;
  font-family: $ffSansSerif;
  font-size: $mainFontSize;
  font-weight: $fwRegular;
  line-height: 24px;

  &:focus-visible {
    @include focusIndicator();
  }

  &::placeholder {
    color: $darkGrey;
  }
}

@mixin inputLabel {
  display: block;
  margin: 16px 0 4px 0;

  color: $darkerGrey;
  font-family: $ffSerif;
  font-size: $fsMedium;
  font-weight: $fwRegular;
  text-transform: capitalize;
}

@mixin radioButton {
  font-family: $ffSansSerif;
  font-weight: $fwRegular;
}

@mixin checkboxButton {
  font-family: $ffSansSerif;
  font-weight: $fwRegular;
}

@mixin checkbox {
  .cb-container {
    display: inline-block;

    &:focus-within {
      @include focusIndicator();
    }
  }

  input[type="checkbox"] {
    display: inline-block;
    cursor: pointer;
    margin: 0;
    width: 16px;
    height: 16px;

    &:focus-visible {
      @include noFocusIndicator();
    }
  }

  input[type="checkbox"][disabled] {
    cursor: not-allowed;
  }

  input[type="checkbox"] + label {
    @include inputLabel();

    display: inline-block;
    cursor: pointer;
    margin: 0;
    padding-left: 4px;

    color: $nearBlack;
    font-size: $fsMedium;
    font-weight: $fwRegular;
    line-height: 1;
    text-transform: none;
  }

  input[type="checkbox"][disabled] + label {
    color: $paleGrey;
    cursor: not-allowed;
  }
}


// image
@mixin imageReset {
  line-height: 0;
  font-size: 0;
}


// a11y
@mixin focusIndicator($color: $darkerBlue) {
  box-shadow: 0 0 0 4px white, 0 0 0 8px $color;
  outline: 0;

  &::-moz-focus-inner {
    border: 0;
  }
}

@mixin noFocusIndicator() {
  box-shadow: none;
  outline: 0;

  &::-moz-focus-inner {
    border: 0;
  }
}

// a11y - deprecated
@mixin focusOutline($color: $blue) {
  border-color: $color !important;
  box-shadow: 0 0 0 2pt $color !important;
  outline: 0 !important;
  transition: box-shadow 0.2s linear !important;

  &::-moz-focus-inner {
    border: 0;
  }
}

@mixin focusOnLight {
  @include focusOutline($darkerBlue);
}

@mixin focusOnDark {
  @include focusOutline($lightBlue);
}


// article elements
@mixin articleElements {
  // headings
  h1, h2, h3, h4, h5, h6 {
    text-align: left;
  }

  h2 {
    @include heading2();
    margin-top: 48px !important;
  }

  h3 {
    @include heading3();
    margin-top: 32px !important;
    margin-bottom: 16px !important;
  }

  h4 {
    @include heading4();
    margin-top: 24px !important;
  }


  // text blocks
  p {
    @include paragraph();
    letter-spacing: .05pt;
    text-align: justify;
  }

  em, cite {
    font-style: italic;
  }

  strong {
    font-weight: bold;
  }

  blockquote {
    @include blockquote();
    @include elementNeedsSpace();
    @include noSideMargins();

    em, cite {
      font-style: normal;
    }

    :first-child {
      margin-top: 0;
    }

    :last-child {
      margin-bottom: 0;
    }
  }

  pre,
  [lang="actionscript"] {
    @include blockquote();
    @include elementNeedsSpace();
    @include noSideMargins();

    font-family: $ffMonospace;
    color: $darkerGrey;
  }

  .quote-author {
    position: relative;
    top: -32px;

    @include greySerif();
    font-size: 0.95em;
    text-align: right;

    &:before {
      content: "\2014";
      margin-right: 4px;
    }
  }

  ul {
    @include list();
    margin: 16px 0;

    li {
      @include unorderedListItem();
      list-style: none;
    }
  }


  // interactive elements
  a {
    @include anchor();
    display: inline;
    color: $darkerBlue;

    &:hover {
      color: $blue;
    }

    &.cta {
      @include anchorWithArrow();
      display: table;
      margin-top: 16px;

      font-family: $ffSerif;
    }

    &:has(img.full-width.exceed) {
      display: inline-block;
      width: 100%;
    }
  }


  // images and embeds
  img {
    @include imageReset();

    &.full-width {
      width: 100%;

      &.exceed {
        position: relative;

        @media #{$mqDesktop} {
          $halfCol: calc(#{$desktopContentCol} / 2);
          margin-left: calc(50% - $halfCol);
          width: $desktopContentCol;
        }

        @media #{$mqLargeDesktop} {
          $halfCol: calc(#{$largeContentCol} / 2);
          margin-left: calc(50% - $halfCol);
          width: $largeContentCol;
        }
      }
    }

    &.half-width {
      width: 100%;

      @media #{$mqTablet} {
        position: relative;
        left: 25%;
        width: 50%;
      }
    }
  }

  .pixelated {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: -moz-crisp-edges;
    image-rendering: -o-pixelated;
    image-rendering: pixelated;
  }

  figure {
    @include elementNeedsSpace();

    a {
      display: inline-block;
    }
  }

  figcaption,
  .figure-caption,
  .photo-credit {
    margin: 8px auto 16px auto;

    @include greySerif();
    font-size: $fsMedium;
    line-height: 1.25;
    text-align: center;

    em, cite {
      font-style: normal;
    }

    a {
      @include greySerif();
      font-size: $fsMedium;
    }

    @media #{$mqTablet} {
      width: 66%;
    }
  }

  .widescreen-iframe {
    background-color: black;
    width: 100%;
    height: 162px;

    @media #{$mqPhone} {
      height: 192px;
    }
    @media #{$mqTablet} {
      height: 360px;
    }
    @media #{$mqDesktop} {
      height: 316px;
    }
    @media #{$mqLargeDesktop} {
      height: 350px;
    }
  }


  // message blocks
  .article-series,
  .positive-block,
  .warning-block,
  .negative-block,
  .tldr-block {
    position: relative;
    border-width: 2px;
    border-style: solid;
    padding: 24px;

    @include elementNeedsSpace();

    font-family: $ffSerif;
    font-size: $mainFontSize;
    font-weight: $fwRegular;
    color: $nearBlack;

    * {
      font-family: $ffSerif;
      font-size: $mainFontSize;
      color: $nearBlack;

      &:hover {
        color: $nearBlack;
      }
    }

    :first-child {
      margin-top: 0 !important;
    }

    :last-child {
      margin-bottom: 0 !important;
    }
  }

  .positive-block,
  .warning-block,
  .negative-block,
  .tldr-block {
    padding-left: 48px;

    &::before {
      display: inline-block;
      position: absolute;
      height: 16px;
      left: 20px;
      top: 28px;
      width: 8px;

      content: '';
      line-height: 16px;
      text-align: center;
    }
  }

  .article-series {
    background: #E2E7F9;
    border-color: $blue;
  }

  .tldr-block {
    background: $nearWhite;
    border-color: $middleGrey;

    &::before {
      content: '💡';
    }
  }

  .positive-block {
    background: #DEEFEE;
    border-color: $green;

    &::before {
      content: '✅';
      filter: saturate(0.666);
    }
  }

  .warning-block {
    background: #F7F7E6;
    border-color: #F6C514;

    &::before {
      content: '⚠️';
    }
  }

  .negative-block {
    background: #FFEEEE;
    border-color: #990000;

    &::before {
      content: '❌';
    }
  }
}

@mixin tabletArticleWidth {
  $span: calc(
    (4 * #{$tabletColWidth})
    + (3 * #{$gutterWidth})
  );
  width: #{$span};
}

@mixin desktopArticleWidth {
  $span: calc(
    (3 * #{$desktopColWidth})
    + (2 * #{$gutterWidth})
  );
  width: #{$span};
}

@mixin largeDesktopArticleWidth {
  $span: calc(
    (3 * #{$largeDesktopColWidth})
    + (2 * #{$gutterWidth})
  );
  width: #{$span};
}

@mixin articleContentWidth {
  width: $smallContentCol;

  @media #{$mqPhone} {
    width: $phoneContentCol;
  }

  @media #{$mqTablet} {
    @include tabletArticleWidth();
  }

  @media #{$mqDesktop} {
    @include desktopArticleWidth();
  }

  @media #{$mqLargeDesktop} {
    @include largeDesktopArticleWidth();
  }
}

@mixin articleContent {
  @include articleContentWidth();
  color: $nearBlack;
  margin: 32px auto 0 auto;
  position: relative;

  @include articleElements();
}
